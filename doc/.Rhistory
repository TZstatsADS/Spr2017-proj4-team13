setwd("~/GitHub/Spr2017-proj4-team13/lib")
#AKumar <- data.frame(scan("data/nameset/AKumar.txt",
#                          what = list(Coauthor = "", Paper = "", Journal = ""),
#                          sep=">", quiet=TRUE),stringsAsFactors=FALSE)
# This need to be modified for different name set
# extract canonical author id befor "_"
#AKumar$AuthorID <- sub("_.*","",AKumar$Coauthor)
# extract paper number under same author between "_" and first whitespace
#AKumar$PaperNO <- sub(".*_(\\w*)\\s.*", "\\1", AKumar$Coauthor)
# delete "<" in AKumar$Coauthor, you may need to further process the coauthor
# term depending on the method you are using
#AKumar$Coauthor <- gsub("<","",sub("^.*?\\s","", AKumar$Coauthor))
# delete "<" in AKumar$Paper
#AKumar$Paper <- gsub("<","",AKumar$Paper)
# add PaperID for furthur use, you may want to combine all the nameset files and
# then assign the unique ID for all the citations
#AKumar$PaperID <- rownames(AKumar)
AGupta = read.csv("../data/namecsv/AGupta.csv",header = TRUE, stringsAsFactors = FALSE)
AKumar = read.csv("../data/namecsv/AKumar.csv",header = TRUE, stringsAsFactors = FALSE)
CChen = read.csv("../data/namecsv/CChen.csv",header = TRUE, stringsAsFactors = FALSE)
DJohnson = read.csv("../data/namecsv/DJohnson.csv",header = TRUE, stringsAsFactors = FALSE)
JLee =  read.csv("../data/namecsv/JLee.csv",header = TRUE, stringsAsFactors = FALSE)
JMartin = read.csv("../data/namecsv/JMartin.csv",header = TRUE, stringsAsFactors = FALSE)
JRobinson  = read.csv("../data/namecsv/JRobinson.csv",header = TRUE, stringsAsFactors = FALSE)
JSmith = read.csv("../data/namecsv/JSmith.csv",header = TRUE, stringsAsFactors = FALSE)
KTanaka = read.csv("../data/namecsv/KTanaka.csv",header = TRUE, stringsAsFactors = FALSE)
MBrown = read.csv("../data/namecsv/MBrown.csv",header = TRUE, stringsAsFactors = FALSE)
MJones = read.csv("../data/namecsv/MJones.csv",header = TRUE, stringsAsFactors = FALSE)
MMiller = read.csv("../data/namecsv/MMiller.csv",header = TRUE, stringsAsFactors = FALSE)
SLee = read.csv("../data/namecsv/SLee.csv",header = TRUE, stringsAsFactors = FALSE)
YChen = read.csv("../data/namecsv/YChen.csv",header = TRUE, stringsAsFactors = FALSE)
#Input all the information
#Original = read.csv("../data/namecsv/All_Stacked.csv")
#Original$Coauthor = as.character(Original$Coauthor)
#Original$Paper = as.character(Original$Paper)
#Original$Journal = as.character(Original$Journal)
#The dimension
#dim(Original)
#Column name
#colnames(Original)
source("Create_Matrix.R")
View(Create_X)
mb_matrix <- Create_X(MBrown)
source("../lib/paper3/Spectral ClusterQR.R")
mb_cluster <- Spectral.Cluster(mb_matrix,n.cluster = length(unique(MBrown$AuthorID)))
source('evaluation_measures.R')
spec_eva <- function(author,result){
matching <- matching_matrix(author$AuthorID,result)
perform <- performance_statistics(matching)
return(as.data.frame(perform))
}
eva_mb <- spec_eva(MBrown,mb_cluster)
View(eva_mb)
MBrown_sclust.coauthor <- Spectral.Cluster(MBrown.Coauthor, n.cluster=length(unique(MBrown$AuthorID)))
MBrown.Coauthor = Create_Coauthor(MBrown)
MBrown.Paper = Create_Title(MBrown)
source("../lib/paper3/TFIDF_FeatureDesign.R")
#For paper 3
AGupta.Coauthor = Create_Coauthor(AGupta)
AGupta.Paper = Create_Title(AGupta)
AGupta.Journal = Create_Journal(AGupta)
AKumar.Coauthor = Create_Coauthor(AKumar)
AKumar.Paper = Create_Title(AKumar)
AKumar.Journal = Create_Journal(AKumar)
CChen.Coauthor = Create_Coauthor(CChen)
CChen.Paper = Create_Title(CChen)
CChen.Journal = Create_Journal(CChen)
DJohnson.Coauthor = Create_Coauthor(DJohnson)
DJohnson.Paper = Create_Title(DJohnson)
DJohnson.Journal = Create_Journal(DJohnson)
JLee.Coauthor = Create_Coauthor(JLee)
JLee.Paper = Create_Title(JLee)
JLee.Journal = Create_Journal(JLee)
JMartin.Coauthor = Create_Coauthor(JMartin)
JMartin.Paper = Create_Title(JMartin)
JMartin.Journal = Create_Journal(JMartin)
JRobinson.Coauthor = Create_Coauthor(JRobinson)
JRobinson.Paper = Create_Title(JRobinson)
JRobinson.Journal = Create_Journal(JRobinson)
JSmith.Coauthor = Create_Coauthor(JSmith)
JSmith.Paper = Create_Title(JSmith)
JSmith.Journal = Create_Journal(JSmith)
KTanaka.Coauthor = Create_Coauthor(KTanaka)
KTanaka.Paper = Create_Title(KTanaka)
KTanaka.Journal = Create_Journal(KTanaka)
MBrown.Coauthor = Create_Coauthor(MBrown)
MBrown.Paper = Create_Title(MBrown)
MBrown.Journal = Create_Journal(MBrown)
MJones.Coauthor = Create_Coauthor(MJones)
MJones.Paper = Create_Title(MJones)
MJones.Journal = Create_Journal(MJones)
MMiller.Coauthor = Create_Coauthor(MMiller)
MMiller.Paper = Create_Title(MMiller)
MMiller.Journal = Create_Journal(MMiller)
SLee.Coauthor = Create_Coauthor(SLee)
SLee.Paper = Create_Title(SLee)
SLee.Journal = Create_Journal(SLee)
YChen.Coauthor = Create_Coauthor(YChen)
YChen.Paper = Create_Title(YChen)
YChen.Journal = Create_Journal(YChen)
#P3.Coauthor = Create_Coauthor(Original)
#P3.Paper = Create_Title(Original)
#P3.Journal = Create_Journal(Original)
#### Load and process data for paper 6
MBrown_sclust.coauthor <- Spectral.Cluster(MBrown.Coauthor, n.cluster=length(unique(MBrown$AuthorID)))
MBrown_sclust.paper <- Spectral.Cluster(MBrown.Paper, n.cluster=length(unique(MBrown$AuthorID)))
MBrown_sclust.journal <- Spectral.Cluster(MBrown.Journal, n.cluster=length(unique(MBrown$AuthorID)))
MBrown.m1 = spec_eva(MBrown,MBrown_sclust.coauthor)
MBrown.m2 = spec_eva(MBrown,MBrown_sclust.paper)
MBrown.m3 = spec_eva(MBrown,MBrown_sclust.journal)
View(MBrown.m1)
system.time({
eva_mb <- spec_eva(MBrown,mb_cluster)
})
#AKumar <- data.frame(scan("data/nameset/AKumar.txt",
#                          what = list(Coauthor = "", Paper = "", Journal = ""),
#                          sep=">", quiet=TRUE),stringsAsFactors=FALSE)
# This need to be modified for different name set
# extract canonical author id befor "_"
#AKumar$AuthorID <- sub("_.*","",AKumar$Coauthor)
# extract paper number under same author between "_" and first whitespace
#AKumar$PaperNO <- sub(".*_(\\w*)\\s.*", "\\1", AKumar$Coauthor)
# delete "<" in AKumar$Coauthor, you may need to further process the coauthor
# term depending on the method you are using
#AKumar$Coauthor <- gsub("<","",sub("^.*?\\s","", AKumar$Coauthor))
# delete "<" in AKumar$Paper
#AKumar$Paper <- gsub("<","",AKumar$Paper)
# add PaperID for furthur use, you may want to combine all the nameset files and
# then assign the unique ID for all the citations
#AKumar$PaperID <- rownames(AKumar)
AGupta = read.csv("../data/namecsv/AGupta.csv",header = TRUE, stringsAsFactors = FALSE)
AKumar = read.csv("../data/namecsv/AKumar.csv",header = TRUE, stringsAsFactors = FALSE)
CChen = read.csv("../data/namecsv/CChen.csv",header = TRUE, stringsAsFactors = FALSE)
DJohnson = read.csv("../data/namecsv/DJohnson.csv",header = TRUE, stringsAsFactors = FALSE)
JLee =  read.csv("../data/namecsv/JLee.csv",header = TRUE, stringsAsFactors = FALSE)
JMartin = read.csv("../data/namecsv/JMartin.csv",header = TRUE, stringsAsFactors = FALSE)
JRobinson  = read.csv("../data/namecsv/JRobinson.csv",header = TRUE, stringsAsFactors = FALSE)
JSmith = read.csv("../data/namecsv/JSmith.csv",header = TRUE, stringsAsFactors = FALSE)
KTanaka = read.csv("../data/namecsv/KTanaka.csv",header = TRUE, stringsAsFactors = FALSE)
MBrown = read.csv("../data/namecsv/MBrown.csv",header = TRUE, stringsAsFactors = FALSE)
MJones = read.csv("../data/namecsv/MJones.csv",header = TRUE, stringsAsFactors = FALSE)
MMiller = read.csv("../data/namecsv/MMiller.csv",header = TRUE, stringsAsFactors = FALSE)
SLee = read.csv("../data/namecsv/SLee.csv",header = TRUE, stringsAsFactors = FALSE)
YChen = read.csv("../data/namecsv/YChen.csv",header = TRUE, stringsAsFactors = FALSE)
#Input all the information
#Original = read.csv("../data/namecsv/All_Stacked.csv")
#Original$Coauthor = as.character(Original$Coauthor)
#Original$Paper = as.character(Original$Paper)
#Original$Journal = as.character(Original$Journal)
#The dimension
#dim(Original)
#Column name
#colnames(Original)
View(MJones)
View(KTanaka)
setwd("../doc/")
library(stringr)
data.lib="../data/nameset"
data.files=list.files(path=data.lib, "*.txt")
data.files
query.list=substring(data.files,
1, nchar(data.files)-4)
query.list
query.list=paste(substring(query.list, 1, 1),
" ",
substring(query.list,
2, nchar(query.list)),
sep=""
)
query.list
f.line.proc=function(lin, nam.query="."){
# remove unwanted characters
char_notallowed <- "\\@#$%^&?" # characters to be removed
lin.str=str_replace(lin, char_notallowed, "")
# get author id
lin.str=strsplit(lin.str, "_")[[1]]
author_id=as.numeric(lin.str[1])
# get paper id
lin.str=lin.str[2]
paper_id=strsplit(lin.str, " ")[[1]][1]
lin.str=substring(lin.str, nchar(paper_id)+1, nchar(lin.str))
paper_id=as.numeric(paper_id)
# get coauthor list
lin.str=strsplit(lin.str, "<>")[[1]]
coauthor_list=strsplit(lin.str[1], ";")[[1]]
#print(lin.str)
for(j in 1:length(coauthor_list)){
if(nchar(coauthor_list[j])>0){
nam = strsplit(coauthor_list[j], " ")[[1]]
if(nchar(nam[1])>0){
first.ini=substring(nam[1], 1, 1)
}else{
first.ini=substring(nam[2], 1, 1)
}
}
last.name=nam[length(nam)]
nam.str = paste(first.ini, last.name)
coauthor_list[j]=nam.str
}
match_ind = charmatch(nam.query, coauthor_list, nomatch=-1)
#print(nam.query)
#print(coauthor_list)
#print(match_ind)
if(match_ind>0){
coauthor_list=coauthor_list[-match_ind]
}
paper_title=lin.str[2]
journal_name=lin.str[3]
coauthor_list=str_replace(coauthor_list," ","")
coauthor_list=paste(coauthor_list, collapse = ";")
list(author_id,
paper_id,
coauthor_list,
paper_title,
journal_name)
}
data_list=list(1:length(data.files))
data_list
for(i in 1:length(data.files)){
## Step 0 scan in one line at a time.
dat=as.list(readLines(paste(data.lib, data.files[i], sep="/")))
data_list[[i]]=lapply(dat, f.line.proc, nam.query=query.list[i])
}
df <- data.frame(AuthorID=numeric(),
PaperID=numeric(),
Coauthor=character(),
Paper=character(),
Journal=character(),
stringsAsFactors=FALSE)
for (i in 1:length(data_list[[1]])){
for (j in 1:5){
df[i,j]<-data_list[[1]][[i]][[j]]
}
}
df <- data.frame(AuthorID=numeric(),
PaperID=numeric(),
Coauthor=character(),
Paper=character(),
Journal=character(),
stringsAsFactors=FALSE)
for (i in 1:length(data_list[[2]])){
for (j in 1:5){
df[i,j]<-data_list[[2]][[i]][[j]]
}
}
df <- data.frame(AuthorID=numeric(),
PaperID=numeric(),
Coauthor=character(),
Paper=character(),
Journal=character(),
stringsAsFactors=FALSE)
for (i in 1:length(data_list[[3]])){
for (j in 1:5){
df[i,j]<-data_list[[3]][[i]][[j]]
}
}
df <- data.frame(AuthorID=numeric(),
PaperID=numeric(),
Coauthor=character(),
Paper=character(),
Journal=character(),
stringsAsFactors=FALSE)
for (i in 1:length(data_list[[4]])){
for (j in 1:5){
df[i,j]<-data_list[[4]][[i]][[j]]
}
}
df
View(df)
query.list
?itoken
